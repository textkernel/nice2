// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MultiActionButton should downshift only by enabled items with value 1`] = `
<MultiActionsButton
  button={
    <ForwardRef
      context="brand"
      disabled={false}
      isBlock={false}
      isInline={false}
      size="normal"
      type="button"
    >
      Click me!
    </ForwardRef>
  }
  onChange={[MockFunction]}
  placement="top-start"
>
  <div>
    <Button
      aria-expanded={true}
      aria-haspopup="listbox"
      aria-labelledby="downshift-6-label downshift-6-toggle-button"
      context="brand"
      disabled={false}
      id="downshift-6-toggle-button"
      isBlock={false}
      isInline={false}
      onClick={[Function]}
      onKeyDown={[Function]}
      size="normal"
      type="button"
    >
      <button
        aria-expanded={true}
        aria-haspopup="listbox"
        aria-labelledby="downshift-6-label downshift-6-toggle-button"
        className="Button Button--context_brand"
        disabled={false}
        id="downshift-6-toggle-button"
        onClick={[Function]}
        onKeyDown={[Function]}
        type="button"
      >
        Click me!
      </button>
    </Button>
  </div>
  <div
    aria-labelledby="downshift-6-label"
    id="downshift-6-menu"
    onBlur={[Function]}
    onKeyDown={[Function]}
    onMouseLeave={[Function]}
    role="listbox"
    tabIndex={-1}
  >
    <List
      className="MultiActionButton__list"
      doSelectOnNavigate={false}
      isControlledNavigation={true}
      isDivided={false}
      style={
        Object {
          "left": "0",
          "position": "absolute",
          "top": "0",
        }
      }
    >
      <ul
        className="List MultiActionButton__list"
        style={
          Object {
            "left": "0",
            "position": "absolute",
            "top": "0",
          }
        }
      >
        <ListItem
          className="List__item"
          disabled={true}
          highlightContext="default"
          isHighlighted={false}
          isSelected={false}
          key=".$.$key-1"
        >
          <li
            className="ListItem List__item"
          >
            <div
              className="ListItem__container"
              role="presentation"
            >
              <Text
                context="default"
                inline={true}
                key=".0"
                size="normal"
              >
                <span>
                  Disabled
                </span>
              </Text>
            </div>
          </li>
        </ListItem>
        <ListItem
          aria-selected="false"
          className="List__item"
          disabled={false}
          highlightContext="default"
          id="downshift-6-item-0"
          isHighlighted={false}
          isSelected={false}
          key=".$.$key-2"
          onClick={[Function]}
          onMouseMove={[Function]}
          role="option"
          value="1"
        >
          <li
            aria-selected="false"
            className="ListItem ListItem--clickable List__item"
            id="downshift-6-item-0"
            onMouseMove={[Function]}
            role="option"
            value="1"
          >
            <div
              className="ListItem__container"
              onClick={[Function]}
              role="presentation"
            >
              <Text
                context="default"
                inline={true}
                key=".0"
                size="normal"
              >
                <span>
                  With value 1
                </span>
              </Text>
            </div>
          </li>
        </ListItem>
        <ListItem
          className="List__item"
          disabled={false}
          highlightContext="default"
          isHighlighted={false}
          isSelected={false}
          key=".$.$key-3"
        >
          <li
            className="ListItem List__item"
          >
            <div
              className="ListItem__container"
              role="presentation"
            >
              <Text
                context="default"
                inline={true}
                key=".0"
                size="normal"
              >
                <span>
                  Without value
                </span>
              </Text>
            </div>
          </li>
        </ListItem>
        <div
          className="List__item customDiv"
          key=".$.$key-4"
        >
          Div
        </div>
        <ListItem
          aria-selected="false"
          className="List__item"
          disabled={false}
          highlightContext="default"
          id="downshift-6-item-1"
          isHighlighted={false}
          isSelected={false}
          key=".$.$key-5"
          onClick={[Function]}
          onMouseMove={[Function]}
          role="option"
          value="2"
        >
          <li
            aria-selected="false"
            className="ListItem ListItem--clickable List__item"
            id="downshift-6-item-1"
            onMouseMove={[Function]}
            role="option"
            value="2"
          >
            <div
              className="ListItem__container"
              onClick={[Function]}
              role="presentation"
            >
              <Text
                context="default"
                inline={true}
                key=".0"
                size="normal"
              >
                <span>
                  With value 2
                </span>
              </Text>
            </div>
          </li>
        </ListItem>
      </ul>
    </List>
  </div>
</MultiActionsButton>
`;

exports[`MultiActionButton should render correctly closed 1`] = `
<MultiActionsButton
  button={
    <ForwardRef
      context="brand"
      disabled={false}
      isBlock={false}
      isInline={false}
      size="normal"
      type="button"
    >
      Click me!
    </ForwardRef>
  }
  onChange={[MockFunction]}
  placement="top-start"
>
  <div>
    <Button
      aria-expanded={false}
      aria-haspopup="listbox"
      aria-labelledby="downshift-0-label downshift-0-toggle-button"
      context="brand"
      disabled={false}
      id="downshift-0-toggle-button"
      isBlock={false}
      isInline={false}
      onClick={[Function]}
      onKeyDown={[Function]}
      size="normal"
      type="button"
    >
      <button
        aria-expanded={false}
        aria-haspopup="listbox"
        aria-labelledby="downshift-0-label downshift-0-toggle-button"
        className="Button Button--context_brand"
        disabled={false}
        id="downshift-0-toggle-button"
        onClick={[Function]}
        onKeyDown={[Function]}
        type="button"
      >
        Click me!
      </button>
    </Button>
  </div>
  <div
    aria-labelledby="downshift-0-label"
    id="downshift-0-menu"
    onBlur={[Function]}
    onKeyDown={[Function]}
    onMouseLeave={[Function]}
    role="listbox"
    tabIndex={-1}
  />
</MultiActionsButton>
`;

exports[`MultiActionButton should render correctly opened 1`] = `
<MultiActionsButton
  button={
    <ForwardRef
      context="brand"
      disabled={false}
      isBlock={false}
      isInline={false}
      size="normal"
      type="button"
    >
      Click me!
    </ForwardRef>
  }
  onChange={[MockFunction]}
  placement="top-start"
>
  <div>
    <Button
      aria-expanded={true}
      aria-haspopup="listbox"
      aria-labelledby="downshift-2-label downshift-2-toggle-button"
      context="brand"
      disabled={false}
      id="downshift-2-toggle-button"
      isBlock={false}
      isInline={false}
      onClick={[Function]}
      onKeyDown={[Function]}
      size="normal"
      type="button"
    >
      <button
        aria-expanded={true}
        aria-haspopup="listbox"
        aria-labelledby="downshift-2-label downshift-2-toggle-button"
        className="Button Button--context_brand"
        disabled={false}
        id="downshift-2-toggle-button"
        onClick={[Function]}
        onKeyDown={[Function]}
        type="button"
      >
        Click me!
      </button>
    </Button>
  </div>
  <div
    aria-labelledby="downshift-2-label"
    id="downshift-2-menu"
    onBlur={[Function]}
    onKeyDown={[Function]}
    onMouseLeave={[Function]}
    role="listbox"
    tabIndex={-1}
  >
    <List
      className="MultiActionButton__list"
      doSelectOnNavigate={false}
      isControlledNavigation={true}
      isDivided={false}
      style={
        Object {
          "left": "0",
          "position": "absolute",
          "top": "0",
        }
      }
    >
      <ul
        className="List MultiActionButton__list"
        style={
          Object {
            "left": "0",
            "position": "absolute",
            "top": "0",
          }
        }
      >
        <ListItem
          className="List__item"
          disabled={true}
          highlightContext="default"
          isHighlighted={false}
          isSelected={false}
          key=".$.$disabled-key"
        >
          <li
            className="ListItem List__item"
          >
            <div
              className="ListItem__container"
              role="presentation"
            >
              <Text
                context="default"
                inline={true}
                key=".0"
                size="normal"
              >
                <span>
                  Disabled
                </span>
              </Text>
            </div>
          </li>
        </ListItem>
        <ListItem
          aria-selected="false"
          className="List__item"
          disabled={false}
          highlightContext="default"
          id="downshift-2-item-0"
          isHighlighted={false}
          isSelected={false}
          key=".$.$first-key"
          onClick={[Function]}
          onMouseMove={[Function]}
          role="option"
          value="first-value"
        >
          <li
            aria-selected="false"
            className="ListItem ListItem--clickable List__item"
            id="downshift-2-item-0"
            onMouseMove={[Function]}
            role="option"
            value="first-value"
          >
            <div
              className="ListItem__container"
              onClick={[Function]}
              role="presentation"
            >
              <Text
                context="default"
                inline={true}
                key=".0"
                size="normal"
              >
                <span>
                  With value
                </span>
              </Text>
            </div>
          </li>
        </ListItem>
      </ul>
    </List>
  </div>
</MultiActionsButton>
`;
