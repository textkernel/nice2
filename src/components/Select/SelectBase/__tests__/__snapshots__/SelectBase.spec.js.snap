// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SelectBase rendering should initially render empty component correctly 1`] = `
<SelectBase
  blurredRenderer={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "getInputProps": [Function],
            "getToggleButtonProps": [Function],
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": <input
            aria-activedescendant={null}
            aria-autocomplete="list"
            aria-controls={null}
            aria-labelledby="downshift-0-label"
            autoComplete="off"
            id="downshift-0-input"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            value=""
          />,
        },
      ],
    }
  }
  clearTitle=""
  focusedRenderer={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "getInputProps": [Function],
            "getToggleButtonProps": [Function],
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": <input
            aria-activedescendant={null}
            aria-autocomplete="list"
            aria-controls={null}
            aria-labelledby="downshift-0-label"
            autoComplete="off"
            id="downshift-0-input"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            value=""
          />,
        },
      ],
    }
  }
  keepExpandedAfterSelection={false}
  listRenderer={[Function]}
  noSuggestionsPlaceholder="No suggestions..."
  onBlur={[MockFunction]}
  onClearAllSelected={[MockFunction]}
  onInputValueChange={[MockFunction]}
  onSelectionChange={[MockFunction]}
  showClearButton={false}
  suggestionToString={[Function]}
  suggestions={
    Array [
      Object {
        "name": "Sun",
      },
      Object {
        "name": "Moon",
      },
      Object {
        "name": "Mercury",
      },
      Object {
        "name": "Venus",
      },
      Object {
        "name": "Earth",
      },
      Object {
        "name": "Mars",
      },
      Object {
        "name": "Jupiter",
      },
      Object {
        "name": "Saturn",
      },
      Object {
        "name": "Neptun",
      },
    ]
  }
>
  <div
    className="SelectBase"
  >
    <Downshift
      defaultHighlightedIndex={0}
      defaultIsOpen={false}
      environment={[Window]}
      getA11yStatusMessage={[Function]}
      inputValue=""
      itemToString={[Function]}
      onChange={[Function]}
      onInputValueChange={[Function]}
      onOuterClick={[Function]}
      onSelect={[Function]}
      onStateChange={[Function]}
      onUserAction={[Function]}
      scrollIntoView={[Function]}
      selectedItemChanged={[Function]}
      stateReducer={[Function]}
      suppressRefError={false}
    >
      <div
        aria-expanded={false}
        aria-haspopup="listbox"
        aria-labelledby="downshift-0-label"
        aria-owns={null}
        className="SelectBase__main"
        role="combobox"
      >
        <FieldWrapper
          className="SelectBase__field"
          clearLabel=""
          isFocused={false}
          onClear={[Function]}
          onClick={[Function]}
          onKeyDown={[Function]}
          showClearButton={false}
        >
          <div
            className="FieldWrapper SelectBase__field"
            onClick={[Function]}
            onKeyDown={[Function]}
          >
            <div
              className="FieldWrapper__content"
            >
              <input
                aria-activedescendant={null}
                aria-autocomplete="list"
                aria-controls={null}
                aria-labelledby="downshift-0-label"
                autoComplete="off"
                id="downshift-0-input"
                onBlur={[Function]}
                onChange={[Function]}
                onKeyDown={[Function]}
                value=""
              />
              <List
                aria-labelledby="downshift-0-label"
                doSelectOnNavigate={false}
                id="downshift-0-menu"
                isControlledNavigation={true}
                isDivided={false}
                role="listbox"
              >
                <ul
                  aria-labelledby="downshift-0-label"
                  className="List"
                  id="downshift-0-menu"
                  role="listbox"
                />
              </List>
            </div>
          </div>
        </FieldWrapper>
      </div>
    </Downshift>
  </div>
</SelectBase>
`;

exports[`SelectBase rendering should render all suggestions from the list 1`] = `
<SelectBase
  blurredRenderer={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "getInputProps": [Function],
            "getToggleButtonProps": [Function],
          },
        ],
        Array [
          Object {
            "getInputProps": [Function],
            "getToggleButtonProps": [Function],
          },
        ],
        Array [
          Object {
            "getInputProps": [Function],
            "getToggleButtonProps": [Function],
            "inputValue": "",
            "onBlur": [Function],
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": <input
            aria-activedescendant={null}
            aria-autocomplete="list"
            aria-controls={null}
            aria-labelledby="downshift-3-label"
            autoComplete="off"
            id="downshift-3-input"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            value=""
          />,
        },
        Object {
          "type": "return",
          "value": <input
            aria-activedescendant="downshift-3-item-0"
            aria-autocomplete="list"
            aria-controls="downshift-3-menu"
            aria-labelledby="downshift-3-label"
            autoComplete="off"
            id="downshift-3-input"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            value=""
          />,
        },
        Object {
          "type": "return",
          "value": <input
            aria-activedescendant="downshift-3-item-0"
            aria-autocomplete="list"
            aria-controls="downshift-3-menu"
            aria-labelledby="downshift-3-label"
            autoComplete="off"
            id="downshift-3-input"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            value=""
          />,
        },
      ],
    }
  }
  clearTitle=""
  focusedRenderer={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "getInputProps": [Function],
            "getToggleButtonProps": [Function],
          },
        ],
        Array [
          Object {
            "getInputProps": [Function],
            "getToggleButtonProps": [Function],
          },
        ],
        Array [
          Object {
            "getInputProps": [Function],
            "getToggleButtonProps": [Function],
            "inputValue": "",
            "onBlur": [Function],
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": <input
            aria-activedescendant={null}
            aria-autocomplete="list"
            aria-controls={null}
            aria-labelledby="downshift-3-label"
            autoComplete="off"
            id="downshift-3-input"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            value=""
          />,
        },
        Object {
          "type": "return",
          "value": <input
            aria-activedescendant="downshift-3-item-0"
            aria-autocomplete="list"
            aria-controls="downshift-3-menu"
            aria-labelledby="downshift-3-label"
            autoComplete="off"
            id="downshift-3-input"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            value=""
          />,
        },
        Object {
          "type": "return",
          "value": <input
            aria-activedescendant="downshift-3-item-0"
            aria-autocomplete="list"
            aria-controls="downshift-3-menu"
            aria-labelledby="downshift-3-label"
            autoComplete="off"
            id="downshift-3-input"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            value=""
          />,
        },
      ],
    }
  }
  keepExpandedAfterSelection={false}
  listRenderer={[Function]}
  noSuggestionsPlaceholder="No suggestions..."
  onBlur={[MockFunction]}
  onClearAllSelected={[MockFunction]}
  onInputValueChange={[MockFunction]}
  onSelectionChange={[MockFunction]}
  showClearButton={false}
  suggestionToString={[Function]}
  suggestions={
    Array [
      Object {
        "name": "Sun",
      },
      Object {
        "name": "Moon",
      },
      Object {
        "name": "Mercury",
      },
      Object {
        "name": "Venus",
      },
      Object {
        "name": "Earth",
      },
      Object {
        "name": "Mars",
      },
      Object {
        "name": "Jupiter",
      },
      Object {
        "name": "Saturn",
      },
      Object {
        "name": "Neptun",
      },
    ]
  }
>
  <div
    className="SelectBase"
  >
    <Downshift
      defaultHighlightedIndex={0}
      defaultIsOpen={false}
      environment={[Window]}
      getA11yStatusMessage={[Function]}
      inputValue=""
      itemToString={[Function]}
      onChange={[Function]}
      onInputValueChange={[Function]}
      onOuterClick={[Function]}
      onSelect={[Function]}
      onStateChange={[Function]}
      onUserAction={[Function]}
      scrollIntoView={[Function]}
      selectedItemChanged={[Function]}
      stateReducer={[Function]}
      suppressRefError={false}
    >
      <div
        aria-expanded={true}
        aria-haspopup="listbox"
        aria-labelledby="downshift-3-label"
        aria-owns="downshift-3-menu"
        className="SelectBase__main SelectBase__main--focused"
        role="combobox"
      >
        <FieldWrapper
          className="SelectBase__field"
          clearLabel=""
          isFocused={true}
          onClear={[Function]}
          onClick={[Function]}
          onKeyDown={[Function]}
          showClearButton={false}
        >
          <div
            className="FieldWrapper FieldWrapper--isFocused SelectBase__field"
            onClick={[Function]}
            onKeyDown={[Function]}
          >
            <div
              className="FieldWrapper__content"
            >
              <input
                aria-activedescendant="downshift-3-item-0"
                aria-autocomplete="list"
                aria-controls="downshift-3-menu"
                aria-labelledby="downshift-3-label"
                autoComplete="off"
                id="downshift-3-input"
                onBlur={[Function]}
                onChange={[Function]}
                onKeyDown={[Function]}
                value=""
              />
              <List
                aria-labelledby="downshift-3-label"
                className="SelectBase__list--focused"
                doSelectOnNavigate={false}
                id="downshift-3-menu"
                isControlledNavigation={true}
                isDivided={false}
                role="listbox"
              >
                <ul
                  aria-labelledby="downshift-3-label"
                  className="List SelectBase__list--focused"
                  id="downshift-3-menu"
                  role="listbox"
                >
                  <SuggestionsList
                    className="List__item"
                    getItemProps={[Function]}
                    highlightedIndex={0}
                    inputValue=""
                    key=".0"
                    noSuggestionsPlaceholder="No suggestions..."
                    suggestionToString={[Function]}
                    suggestions={
                      Array [
                        Object {
                          "name": "Sun",
                        },
                        Object {
                          "name": "Moon",
                        },
                        Object {
                          "name": "Mercury",
                        },
                        Object {
                          "name": "Venus",
                        },
                        Object {
                          "name": "Earth",
                        },
                        Object {
                          "name": "Mars",
                        },
                        Object {
                          "name": "Jupiter",
                        },
                        Object {
                          "name": "Saturn",
                        },
                        Object {
                          "name": "Neptun",
                        },
                      ]
                    }
                  >
                    <ListItem
                      aria-selected={true}
                      disabled={false}
                      highlightContext="brand"
                      id="downshift-3-item-0"
                      isHighlighted={true}
                      isSelected={false}
                      key="Sun"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                      onMouseMove={[Function]}
                      role="option"
                    >
                      <li
                        aria-selected={true}
                        className="ListItem ListItem--isHighlighted ListItem--highlightContext_brand ListItem--clickable"
                        id="downshift-3-item-0"
                        onMouseDown={[Function]}
                        onMouseMove={[Function]}
                        role="option"
                      >
                        <div
                          className="ListItem__container"
                          onClick={[Function]}
                          role="presentation"
                        >
                          <MarkedText
                            inline={true}
                            key=".0"
                            marker=""
                          >
                            <Text
                              context="default"
                              inline={true}
                              size="normal"
                            >
                              <span>
                                Sun
                              </span>
                            </Text>
                          </MarkedText>
                        </div>
                      </li>
                    </ListItem>
                    <ListItem
                      aria-selected={false}
                      disabled={false}
                      highlightContext="brand"
                      id="downshift-3-item-1"
                      isHighlighted={false}
                      isSelected={false}
                      key="Moon"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                      onMouseMove={[Function]}
                      role="option"
                    >
                      <li
                        aria-selected={false}
                        className="ListItem ListItem--highlightContext_brand ListItem--clickable"
                        id="downshift-3-item-1"
                        onMouseDown={[Function]}
                        onMouseMove={[Function]}
                        role="option"
                      >
                        <div
                          className="ListItem__container"
                          onClick={[Function]}
                          role="presentation"
                        >
                          <MarkedText
                            inline={true}
                            key=".0"
                            marker=""
                          >
                            <Text
                              context="default"
                              inline={true}
                              size="normal"
                            >
                              <span>
                                Moon
                              </span>
                            </Text>
                          </MarkedText>
                        </div>
                      </li>
                    </ListItem>
                    <ListItem
                      aria-selected={false}
                      disabled={false}
                      highlightContext="brand"
                      id="downshift-3-item-2"
                      isHighlighted={false}
                      isSelected={false}
                      key="Mercury"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                      onMouseMove={[Function]}
                      role="option"
                    >
                      <li
                        aria-selected={false}
                        className="ListItem ListItem--highlightContext_brand ListItem--clickable"
                        id="downshift-3-item-2"
                        onMouseDown={[Function]}
                        onMouseMove={[Function]}
                        role="option"
                      >
                        <div
                          className="ListItem__container"
                          onClick={[Function]}
                          role="presentation"
                        >
                          <MarkedText
                            inline={true}
                            key=".0"
                            marker=""
                          >
                            <Text
                              context="default"
                              inline={true}
                              size="normal"
                            >
                              <span>
                                Mercury
                              </span>
                            </Text>
                          </MarkedText>
                        </div>
                      </li>
                    </ListItem>
                    <ListItem
                      aria-selected={false}
                      disabled={false}
                      highlightContext="brand"
                      id="downshift-3-item-3"
                      isHighlighted={false}
                      isSelected={false}
                      key="Venus"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                      onMouseMove={[Function]}
                      role="option"
                    >
                      <li
                        aria-selected={false}
                        className="ListItem ListItem--highlightContext_brand ListItem--clickable"
                        id="downshift-3-item-3"
                        onMouseDown={[Function]}
                        onMouseMove={[Function]}
                        role="option"
                      >
                        <div
                          className="ListItem__container"
                          onClick={[Function]}
                          role="presentation"
                        >
                          <MarkedText
                            inline={true}
                            key=".0"
                            marker=""
                          >
                            <Text
                              context="default"
                              inline={true}
                              size="normal"
                            >
                              <span>
                                Venus
                              </span>
                            </Text>
                          </MarkedText>
                        </div>
                      </li>
                    </ListItem>
                    <ListItem
                      aria-selected={false}
                      disabled={false}
                      highlightContext="brand"
                      id="downshift-3-item-4"
                      isHighlighted={false}
                      isSelected={false}
                      key="Earth"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                      onMouseMove={[Function]}
                      role="option"
                    >
                      <li
                        aria-selected={false}
                        className="ListItem ListItem--highlightContext_brand ListItem--clickable"
                        id="downshift-3-item-4"
                        onMouseDown={[Function]}
                        onMouseMove={[Function]}
                        role="option"
                      >
                        <div
                          className="ListItem__container"
                          onClick={[Function]}
                          role="presentation"
                        >
                          <MarkedText
                            inline={true}
                            key=".0"
                            marker=""
                          >
                            <Text
                              context="default"
                              inline={true}
                              size="normal"
                            >
                              <span>
                                Earth
                              </span>
                            </Text>
                          </MarkedText>
                        </div>
                      </li>
                    </ListItem>
                    <ListItem
                      aria-selected={false}
                      disabled={false}
                      highlightContext="brand"
                      id="downshift-3-item-5"
                      isHighlighted={false}
                      isSelected={false}
                      key="Mars"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                      onMouseMove={[Function]}
                      role="option"
                    >
                      <li
                        aria-selected={false}
                        className="ListItem ListItem--highlightContext_brand ListItem--clickable"
                        id="downshift-3-item-5"
                        onMouseDown={[Function]}
                        onMouseMove={[Function]}
                        role="option"
                      >
                        <div
                          className="ListItem__container"
                          onClick={[Function]}
                          role="presentation"
                        >
                          <MarkedText
                            inline={true}
                            key=".0"
                            marker=""
                          >
                            <Text
                              context="default"
                              inline={true}
                              size="normal"
                            >
                              <span>
                                Mars
                              </span>
                            </Text>
                          </MarkedText>
                        </div>
                      </li>
                    </ListItem>
                    <ListItem
                      aria-selected={false}
                      disabled={false}
                      highlightContext="brand"
                      id="downshift-3-item-6"
                      isHighlighted={false}
                      isSelected={false}
                      key="Jupiter"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                      onMouseMove={[Function]}
                      role="option"
                    >
                      <li
                        aria-selected={false}
                        className="ListItem ListItem--highlightContext_brand ListItem--clickable"
                        id="downshift-3-item-6"
                        onMouseDown={[Function]}
                        onMouseMove={[Function]}
                        role="option"
                      >
                        <div
                          className="ListItem__container"
                          onClick={[Function]}
                          role="presentation"
                        >
                          <MarkedText
                            inline={true}
                            key=".0"
                            marker=""
                          >
                            <Text
                              context="default"
                              inline={true}
                              size="normal"
                            >
                              <span>
                                Jupiter
                              </span>
                            </Text>
                          </MarkedText>
                        </div>
                      </li>
                    </ListItem>
                    <ListItem
                      aria-selected={false}
                      disabled={false}
                      highlightContext="brand"
                      id="downshift-3-item-7"
                      isHighlighted={false}
                      isSelected={false}
                      key="Saturn"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                      onMouseMove={[Function]}
                      role="option"
                    >
                      <li
                        aria-selected={false}
                        className="ListItem ListItem--highlightContext_brand ListItem--clickable"
                        id="downshift-3-item-7"
                        onMouseDown={[Function]}
                        onMouseMove={[Function]}
                        role="option"
                      >
                        <div
                          className="ListItem__container"
                          onClick={[Function]}
                          role="presentation"
                        >
                          <MarkedText
                            inline={true}
                            key=".0"
                            marker=""
                          >
                            <Text
                              context="default"
                              inline={true}
                              size="normal"
                            >
                              <span>
                                Saturn
                              </span>
                            </Text>
                          </MarkedText>
                        </div>
                      </li>
                    </ListItem>
                    <ListItem
                      aria-selected={false}
                      disabled={false}
                      highlightContext="brand"
                      id="downshift-3-item-8"
                      isHighlighted={false}
                      isSelected={false}
                      key="Neptun"
                      onClick={[Function]}
                      onMouseDown={[Function]}
                      onMouseMove={[Function]}
                      role="option"
                    >
                      <li
                        aria-selected={false}
                        className="ListItem ListItem--highlightContext_brand ListItem--clickable"
                        id="downshift-3-item-8"
                        onMouseDown={[Function]}
                        onMouseMove={[Function]}
                        role="option"
                      >
                        <div
                          className="ListItem__container"
                          onClick={[Function]}
                          role="presentation"
                        >
                          <MarkedText
                            inline={true}
                            key=".0"
                            marker=""
                          >
                            <Text
                              context="default"
                              inline={true}
                              size="normal"
                            >
                              <span>
                                Neptun
                              </span>
                            </Text>
                          </MarkedText>
                        </div>
                      </li>
                    </ListItem>
                  </SuggestionsList>
                </ul>
              </List>
            </div>
          </div>
        </FieldWrapper>
      </div>
    </Downshift>
  </div>
</SelectBase>
`;

exports[`SelectBase rendering should render noSuggestions placeholder when empty suggestions list is passed 1`] = `
<SelectBase
  blurredRenderer={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "getInputProps": [Function],
            "getToggleButtonProps": [Function],
          },
        ],
        Array [
          Object {
            "getInputProps": [Function],
            "getToggleButtonProps": [Function],
          },
        ],
        Array [
          Object {
            "getInputProps": [Function],
            "getToggleButtonProps": [Function],
          },
        ],
        Array [
          Object {
            "getInputProps": [Function],
            "getToggleButtonProps": [Function],
            "inputValue": "driver",
            "onBlur": [Function],
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": <input
            aria-activedescendant={null}
            aria-autocomplete="list"
            aria-controls={null}
            aria-labelledby="downshift-2-label"
            autoComplete="off"
            id="downshift-2-input"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            value=""
          />,
        },
        Object {
          "type": "return",
          "value": <input
            aria-activedescendant={null}
            aria-autocomplete="list"
            aria-controls={null}
            aria-labelledby="downshift-2-label"
            autoComplete="off"
            id="downshift-2-input"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            value=""
          />,
        },
        Object {
          "type": "return",
          "value": <input
            aria-activedescendant="downshift-2-item-0"
            aria-autocomplete="list"
            aria-controls="downshift-2-menu"
            aria-labelledby="downshift-2-label"
            autoComplete="off"
            id="downshift-2-input"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            value="driver"
          />,
        },
        Object {
          "type": "return",
          "value": <input
            aria-activedescendant="downshift-2-item-0"
            aria-autocomplete="list"
            aria-controls="downshift-2-menu"
            aria-labelledby="downshift-2-label"
            autoComplete="off"
            id="downshift-2-input"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            value="driver"
          />,
        },
      ],
    }
  }
  clearTitle=""
  focusedRenderer={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "getInputProps": [Function],
            "getToggleButtonProps": [Function],
          },
        ],
        Array [
          Object {
            "getInputProps": [Function],
            "getToggleButtonProps": [Function],
          },
        ],
        Array [
          Object {
            "getInputProps": [Function],
            "getToggleButtonProps": [Function],
          },
        ],
        Array [
          Object {
            "getInputProps": [Function],
            "getToggleButtonProps": [Function],
            "inputValue": "driver",
            "onBlur": [Function],
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": <input
            aria-activedescendant={null}
            aria-autocomplete="list"
            aria-controls={null}
            aria-labelledby="downshift-2-label"
            autoComplete="off"
            id="downshift-2-input"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            value=""
          />,
        },
        Object {
          "type": "return",
          "value": <input
            aria-activedescendant={null}
            aria-autocomplete="list"
            aria-controls={null}
            aria-labelledby="downshift-2-label"
            autoComplete="off"
            id="downshift-2-input"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            value=""
          />,
        },
        Object {
          "type": "return",
          "value": <input
            aria-activedescendant="downshift-2-item-0"
            aria-autocomplete="list"
            aria-controls="downshift-2-menu"
            aria-labelledby="downshift-2-label"
            autoComplete="off"
            id="downshift-2-input"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            value="driver"
          />,
        },
        Object {
          "type": "return",
          "value": <input
            aria-activedescendant="downshift-2-item-0"
            aria-autocomplete="list"
            aria-controls="downshift-2-menu"
            aria-labelledby="downshift-2-label"
            autoComplete="off"
            id="downshift-2-input"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            value="driver"
          />,
        },
      ],
    }
  }
  keepExpandedAfterSelection={false}
  listRenderer={[Function]}
  noSuggestionsPlaceholder="No suggestions..."
  onBlur={[MockFunction]}
  onClearAllSelected={[MockFunction]}
  onInputValueChange={
    [MockFunction] {
      "calls": Array [
        Array [
          "driver",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  onSelectionChange={[MockFunction]}
  showClearButton={false}
  suggestionToString={[Function]}
  suggestions={Array []}
>
  <div
    className="SelectBase"
  >
    <Downshift
      defaultHighlightedIndex={0}
      defaultIsOpen={false}
      environment={[Window]}
      getA11yStatusMessage={[Function]}
      inputValue="driver"
      itemToString={[Function]}
      onChange={[Function]}
      onInputValueChange={[Function]}
      onOuterClick={[Function]}
      onSelect={[Function]}
      onStateChange={[Function]}
      onUserAction={[Function]}
      scrollIntoView={[Function]}
      selectedItemChanged={[Function]}
      stateReducer={[Function]}
      suppressRefError={false}
    >
      <div
        aria-expanded={true}
        aria-haspopup="listbox"
        aria-labelledby="downshift-2-label"
        aria-owns="downshift-2-menu"
        className="SelectBase__main SelectBase__main--focused"
        role="combobox"
      >
        <FieldWrapper
          className="SelectBase__field"
          clearLabel=""
          isFocused={true}
          onClear={[Function]}
          onClick={[Function]}
          onKeyDown={[Function]}
          showClearButton={false}
        >
          <div
            className="FieldWrapper FieldWrapper--isFocused SelectBase__field"
            onClick={[Function]}
            onKeyDown={[Function]}
          >
            <div
              className="FieldWrapper__content"
            >
              <input
                aria-activedescendant="downshift-2-item-0"
                aria-autocomplete="list"
                aria-controls="downshift-2-menu"
                aria-labelledby="downshift-2-label"
                autoComplete="off"
                id="downshift-2-input"
                onBlur={[Function]}
                onChange={[Function]}
                onKeyDown={[Function]}
                value="driver"
              />
              <List
                aria-labelledby="downshift-2-label"
                className="SelectBase__list--focused"
                doSelectOnNavigate={false}
                id="downshift-2-menu"
                isControlledNavigation={true}
                isDivided={false}
                role="listbox"
              >
                <ul
                  aria-labelledby="downshift-2-label"
                  className="List SelectBase__list--focused"
                  id="downshift-2-menu"
                  role="listbox"
                >
                  <SuggestionsList
                    className="List__item"
                    getItemProps={[Function]}
                    highlightedIndex={0}
                    inputValue="driver"
                    key=".0"
                    noSuggestionsPlaceholder="No suggestions..."
                    suggestionToString={[Function]}
                    suggestions={Array []}
                  >
                    <ListItem
                      disabled={true}
                      highlightContext="default"
                      isHighlighted={false}
                      isSelected={false}
                    >
                      <li
                        className="ListItem"
                      >
                        <div
                          className="ListItem__container"
                          role="presentation"
                        >
                          <Text
                            context="muted"
                            inline={false}
                            key=".0"
                            size="normal"
                          >
                            <p
                              className="Text--context_muted"
                            >
                              No suggestions...
                            </p>
                          </Text>
                        </div>
                      </li>
                    </ListItem>
                  </SuggestionsList>
                </ul>
              </List>
            </div>
          </div>
        </FieldWrapper>
      </div>
    </Downshift>
  </div>
</SelectBase>
`;
